version: "3.8"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    restart: always
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test:1:1,measure_recordings:1:1,device_commands:1:1,sensors_metrics:1:1"
      KAFKA_LISTENERS: "INTERNAL://:9092,EXTERNAL://:9093"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zookeeper
    restart: always
  kafdrop:
    image: obsidiandynamics/kafdrop
    depends_on: 
      - kafka 
      - zookeeper
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    restart: always
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    env_file:
      - .env
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE=$MONGO_INITDB_DATABASE
    volumes:
      - ./mongodb_data/:/data/db/
      - ./docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_SERVER=$MONGO_HOST
      - ME_CONFIG_MONGODB_PORT=$MONGO_PORT
      - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGO_USER
      - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGO_PASSWORD
      - ME_CONFIG_BASICAUTH_USERNAME=$MONGO_USER
      - ME_CONFIG_BASICAUTH_PASSWORD=$MONGO_PASSWORD
    env_file: .env
    ports:
      - 8081:8081
    volumes: 
      - ./mongodb_data/:/data/db/
  monitoring-management-microservice:
    build: 
      context: ./monitoring-management-microservice
      dockerfile: Dockerfile
    # command: python main.py
    container_name: monitoring-management-microservice
    restart: always
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DB_USERNAME=${MONGO_USER}
      - DB_PASSWORD=${MONGO_PASSWORD}
      - DB_HOST=${MONGO_HOST}
      - DB_PORT=${MONGO_PORT}
      - DB_NAME=${MONGO_DB}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
      - KAFKA_TOPICS=${KAFKA_TOPICS}
    volumes:
      - ./monitoring-management-microservice/:/app/monitoring-management-microservice/
    env_file: .env
    depends_on:
      - kafka 
      - mongodb
    ports:
      - 8000:8000
