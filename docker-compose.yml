version: "3.9"

services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    env_file:
      - .env
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE=$MONGO_INITDB_DATABASE
    volumes:
      - ./data:/data/db 
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    depends_on:
      - db
    environment:
      - ME_CONFIG_MONGODB_SERVER=$MONGO_HOST
      - ME_CONFIG_MONGODB_PORT=$MONGO_PORT
      - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGO_USER
      - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGO_PASSWORD
      - ME_CONFIG_BASICAUTH_USERNAME=$MONGO_USER
      - ME_CONFIG_BASICAUTH_PASSWORD=$MONGO_PASSWORD
    env_file: .env
    ports:
      - 8081:8081
    volumes: 
      - ./data:/data/db 
  monitoring-management-microservice:
    build: ./monitoring-management-microservice
    command: python main.py
    container_name: monitoring-management-microservice
    restart: always
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DB_USERNAME=${MONGO_USER}
      - DB_PASSWORD=${MONGO_PASSWORD}
      - DB_HOST=${MONGO_HOST}
      - DB_PORT=${MONGO_PORT}
      - DB_NAME=${MONGO_DB}
    volumes:
      - ./monitoring-management-microservice:/app/monitoring-management-microservice
    env_file: .env
    depends_on:
      - mongodb
    ports:
      - 8080:8080

