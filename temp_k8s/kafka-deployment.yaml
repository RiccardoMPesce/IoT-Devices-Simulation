apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --out temp_k8s/
    kompose.version: 1.26.1 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --out temp_k8s/
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: kafka
    spec:
      containers:
        - env:
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: CLIENT://kafka:9092,EXTERNAL://localhost:9093
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_CREATE_TOPICS
              value: '"test:1:1,measure_recordings:1:1,device_commands:1:1,sensor_metrics:1:1"'
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: CLIENT
            - name: KAFKA_LISTENERS
              value: CLIENT://:9092,EXTERNAL://:9093
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
          image: bitnami/kafka
          name: kafka
          ports:
            - containerPort: 9093
          resources: {}
          volumeMounts:
            - mountPath: /data/kafka
              name: kafka-claim0
      hostname: kafka
      restartPolicy: Always
      volumes:
        - name: kafka-claim0
          persistentVolumeClaim:
            claimName: kafka-claim0
status: {}
