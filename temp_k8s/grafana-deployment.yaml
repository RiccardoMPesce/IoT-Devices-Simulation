apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o temp_k8s
    kompose.version: 1.26.1 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o temp_k8s
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: grafana
    spec:
      containers:
        - env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: Admin
            - name: GF_AUTH_BASIC_ENABLED
              value: "false"
          image: grafana/grafana
          name: grafana
          ports:
            - containerPort: 3000
          resources: {}
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/datasource.yml
              name: grafana-claim0
            - mountPath: /var/lib/grafana
              name: grafana-claim1
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-claim2
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-claim3
      restartPolicy: Always
      volumes:
        - name: grafana-claim0
          persistentVolumeClaim:
            claimName: grafana-claim0
        - name: grafana-claim1
          persistentVolumeClaim:
            claimName: grafana-claim1
        - name: grafana-claim2
          persistentVolumeClaim:
            claimName: grafana-claim2
        - name: grafana-claim3
          persistentVolumeClaim:
            claimName: grafana-claim3
status: {}
